※계정 관련

- 현재 계정 확인
SHOW USER;

- 모든 계정 확인
SELECT * FROM all_users;

- SYS 계정으로 들어가기
SYS as sysdba (*비밀번호가 필요없는 sys 계정이다.)

- 계정 생성
CREATE USER 유저명 IDENTIFIED BY "비밀번호"; (*비밀번호를 ""로 안 감쌀 시 대소문자로 에러 발생 가능)
CREATE USER 유저명 IDENTIFIED BY 비밀번호 DEFAULT TABLESPACE 테이블스페이스명;

- 다른 계정으로 넘어가기
conn 유저명/비밀번호;

- 계정 비밀번호 변경
ALTER USER 유저명 IDENTIFIED BY "비밀번호";

- 계정 삭제
DROP USER 유저명; (*해당 사용자의 흔적조차 남기고 싶지 않다면 유저명 뒤에 CASCADE도 붙이자!)

---------------------------------------------------------------

※권한 관련(SYSTEM 계정만 가능)

- 접속 권한 주기
GRANT CONNECT, RESOURCE TO 유저명;

- 사용자에게 권한 주기
GRANT DELETE, INSERT, SELECT, UPDATE ON 테이터베이스명 TO 유저명;

- DBA 권한 주기
GRANT DBA TO 유저명;

- 사용자 권한 확인
SELECT GRANTEE, GRANTED_ROLE FROM DBA_ROLE_PRIVS WHERE GRANTEE='[계정대문자]';

- 권한 롤 확인
SELECT * FROM DBA_ROLES
SELECT * FROM ROLE_SYS_PRIVS WHERE ROLE='[롤명]';

- 권한 취소
REVOKE CONNECT, RESOURCE FROM 유저명; (*CONNECT, RESOURCE 대신 SELECT 등등으로 대체 가능)

------------------------------------
[권한 리스트]                      |
CONNECT(접속)                      |
RESOURCE(저장소)                   |
DBA(관리자)                        |
CREATE SESSION(데이터베이스)       |
CREATE DATABASE LINK               |
CREATE MATERIALIZED VIEW           |
CREATE PROCEDURE                   |
CREATE PUBLIC SYNONYM              |
CREATE ROLE                        |
CREATE SEQUENCE                    |
CREATE SYNONYM                     |
CREATE TABLE(테이블 생성 권한)     |
DROP ANY TABLE(테이블 제거 권한)   |
CREATE TRIGGER                     |
CREATE TYPE                        |
CREATE VIEW                        |
------------------------------------

-------------------------------------------------------------------------------

※테이블 관련

- 모든 테이블 보기
SELECT * FROM TAB;

- 테이블 구조 확인하기
DESC 테이블명;

- 테이블 생성
CREATE TABLE 테이블명(
컬럼명1 데이터타입,
컬럼명2 데이터타입
); (*데이터타입 - Number(길이), VARCHAR2(길이), DATE 등등)

- 코멘트 추가
COMMENT ON TABLE 테이블명 IS '코멘트';
COMMENT ON COLUMN 테이블명.컬럼명 IS '코멘트';

- 테이블 변경(컬럼 추가)
ALTER TABLE 테이블명 ADD(컬럼명 데이터타입);
예) ALTER TABLE testtable ADD(testcolumn VARCHAR(20));

- 테이블 변경 (컬럼 타입 변경)
ALTER TABLE 테이블명 MODIFY(컬럼명 데이터타입);
예) ALTER TABLE testtable MODIFY(testcolumn NUMBER);

- 테이블 변경(컬럼 삭제)
ALTER TABLE 테이블명 DROP(컬럼명);
예) ALTER TABLE testtable DROP(testcolumn);

- 테이블 삭제
DROP TABLE 테이블명;
예) DROP TABLE testtable;

-----------------------------------------------------------

※값 입출력

- 레코드 삽입
INSERT INTO 테이블명(컬럼명1, 컬럼명2) VALUES(데이터, 데이터);
예) INSERT INTO testtable(testNo, testName, testDate) VALUES(100, '홍길동', sysdate);

- 다른 테이블에서 조회에서 레코드 삽입
INSERT INTO 테이블명(1)(컬럼명(1),컬럼명(1)...) SELECT 컴럼명(2), 컬럼명(2), ... FROM 테이블명(2);

- 레코드 수정
UPDATE 테이블명 SET 수정하고자하는 필드명 = 데이터값 WHERE [조건문];
예) UPDATE testtable SET testNo = 50 WHERE testName = '홍길동';

- 레코드 확인
SELECT * FROM 테이블명;
SELECT 컬럼명, 컬럼명 FROM 테이블명;
예) SELECT testNo, testDate FROM testtable;

- 레코드 삭제
DELETE FROM 테이블명 WHERE [조건문];

-----------------------------------------------------------

※시퀀스

- 시퀀스 생성
CREATE SEQUENCE 시퀀스명 [조건]
[조건 : INCREMENT BY 숫자, START WITH 숫자, MAXVALUE 숫자 | NOMAXVALUE, MINVALUE 숫자 | NOMINVALUE, CYCLE | NOCYCLE, CACHE 숫자 | NOCACHE, ORDER | NOORDER]
예) CREATE SEQUENCE test_seq
START WITH 1
INCREMENT BY 1;

--------------------------------------------------------------------------
[조건 리스트]                                                             |
INCREMENT BY : 번호 생성 간격(생략시 1씩)                                 |
START WITH : 생성할 첫 번호(생략시 1부터)                                 |
MAXVALUE : 최대값 지정(생략시 NOMAXVALUE이며 10^27값이 최대)              |
MINVALUE : 최소값 지정(생략시 NOMINVALUE이며 1이 최소)                    |
CYCLE : 최대값이나 최소값에 도달시 반복여부(생략시 NOCYCLE 기본값)         |
CACHE : 공유메모리에 미리 생성할 번호 개수 지정(20개가 기본값)             |
--------------------------------------------------------------------------

- INSERT문에 시퀀스 사용
INSERT INTO 테이블명(컬럼명1, 컬럼명2) VALUES(시퀀스명.명령, 시퀀스명.명령);
예) INSERT INTO testtable(testcolumn1, testcolumn2) VALUES(test_seq.NEXTVAL, test_seq.CURRVAL)

- SELECT문에 시퀀스 사용
SELECT ???...

[명령 : NEXTVAL, CURRVAL]
